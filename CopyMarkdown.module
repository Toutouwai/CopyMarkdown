<?php namespace ProcessWire;

class CopyMarkdown extends WireData implements Module {

	/**
	 * Module information
	 */
	public static function getModuleInfo() {
		return array(
			'title' => 'Copy Markdown',
			'summary' => 'Adds icons to images and files that allow you to copy a Markdown string to the clipboard.',
			'version' => '0.1.0',
			'author' => 'Robin Sallis',
			'href' => 'https://github.com/Toutouwai/CopyMarkdown',
			'icon' => 'asterisk',
			'autoload' => 'template=admin',
			'requires' => 'ProcessWire>=3.0.0, PHP>=5.4.0',
		);
	}

	/**
	 * Ready
	 */
	public function ready() {
		$this->addHookAfter('ProcessPageEdit::execute', $this, 'afterProcessExecution');
		$this->addHookAfter('ProcessPageEditImageSelect::executeVariations', $this, 'afterProcessExecution');
	}

	/**
	 * After ProcessPageEdit::execute and ProcessPageEditImageSelect::executeVariations
	 * Add assets and markup
	 *
	 * @param HookEvent $event
	 */
	public function afterProcessExecution(HookEvent $event) {
		$config = $this->wire()->config;

		// Return if ProcessPageEdit is being loaded via AJAX (image field)
		if($config->ajax) return;

		// Add assets
		$info = $this->getModuleInfo();
		$version = $info['version'];
		$config->scripts->add($config->urls->$this . "{$this}.js?v={$version}");
		$config->styles->add($config->urls->$this . "{$this}.css?v={$version}");

		// Add markup
		$copy_label = $this->_('Copy Markdown');
		$copy_notice = $this->_('Copied Markdown to clipboard');
		$image_description = '';
		if($event->method === 'executeVariations') {
			// Hidden input for image description
			$pageimage = $event->object->getPageimage();
			$image_description = "<input id='cm-image-description' type='hidden' value='$pageimage->description'>";
		}
		$event->return .= <<<EOT
<i id="cm-icon" class="fa fa-asterisk" title="$copy_label"></i>
<div id="cm-notice">{$copy_notice}: <span id="cm-copied"></span></div>$image_description
EOT;
	}

}
